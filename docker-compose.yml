version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: patient_registration_api
      POSTGRES_DB: patient_registration_api_development
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U patient_registration_api"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: development
      BUNDLE_DEPLOYMENT: "0"
      BUNDLE_WITHOUT: ""
      BUNDLE_PATH: "/usr/local/bundle"
      DATABASE_URL: postgresql://patient_registration_api:password@db:5432/patient_registration_api_development
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ./bin/rails server -b 0.0.0.0
    stdin_open: true
    tty: true

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      RAILS_ENV: development
      BUNDLE_DEPLOYMENT: "0"
      BUNDLE_WITHOUT: ""
      BUNDLE_PATH: "/usr/local/bundle"
      DATABASE_URL: postgresql://patient_registration_api:password@db:5432/patient_registration_api_development
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bundle exec sidekiq
    profiles:
      - background

volumes:
  postgres_data:
  redis_data:
  bundle_cache: 